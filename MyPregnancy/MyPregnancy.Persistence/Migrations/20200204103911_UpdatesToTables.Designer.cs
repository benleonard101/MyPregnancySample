// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPregnancy.Persistence;

namespace MyPregnancy.Persistence.Migrations
{
    [DbContext(typeof(MyPregnancyDbContext))]
    [Migration("20200204103911_UpdatesToTables")]
    partial class UpdatesToTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyPregnancy.Domain.Entities.MedicalDetail", b =>
                {
                    b.Property<int>("MedicalDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BloodGroup");

                    b.Property<string>("KnownAllergies");

                    b.Property<int>("PatientId");

                    b.Property<string>("Rhesus");

                    b.HasKey("MedicalDetailId");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("MedicalDetail");
                });

            modelBuilder.Entity("MyPregnancy.Domain.Entities.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("City");

                    b.Property<string>("County");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Forenames");

                    b.Property<string>("HealthCareNumber");

                    b.Property<string>("HomeTelephone");

                    b.Property<bool>("InterpreterRequired");

                    b.Property<string>("Language");

                    b.Property<string>("MobileTelephone");

                    b.Property<string>("Postcode");

                    b.Property<string>("PreferredName");

                    b.Property<string>("Surname");

                    b.HasKey("PatientId");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("MyPregnancy.Domain.Entities.MedicalDetail", b =>
                {
                    b.HasOne("MyPregnancy.Domain.Entities.Patient", "Patient")
                        .WithOne("MedicalDetail")
                        .HasForeignKey("MyPregnancy.Domain.Entities.MedicalDetail", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
